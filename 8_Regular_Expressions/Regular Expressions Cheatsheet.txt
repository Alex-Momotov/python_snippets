MetaCharacters (Need to be escaped with backslash in order to be searched):
.[{(\^$|?*+

.       - Any Character Except New Line
\d      - Digit (0-9)
\D      - Not a Digit (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Whitespace (space, tab, newline)
\S      - Not Whitespace (space, tab, newline)

Anchor characters:
\b      - Word Boundary
\B      - Not a Word Boundary
^       - Beginning of a line
$       - End of a line

Character sets:
[]      - Match any character in brackets
[^ ]    - Match characters NOT in brackets
[a-z]   - Range of characters

Groups:
|       - Either Or
( )     - Group
(a|ab)  - Group of characters

Quantifiers:
*       - 0 or More
+       - 1 or More
?       - 0 or One
{3}     - Exact Number
{3,4}   - Range of Numbers (Minimum, Maximum)


# ----------------------------------------------------------------------------------------------------------------------
    # Sample Regexs

abc             Simple search for literal characters:
.               Dot matches any character except for newline:
\.              To search for dot we need to escape it:
\.\[\?\*\\      To search for any metacharacters we need to escape them using backslash:
coreyms\.com    Simple search for an email.
\bHa\b          Search for 'Ha' which starts and ends with a word boundary:
Ha$             Match 'Ha' only if it is at the end of a string:

^Ha             Match 'Ha' only if it is at the beginning of a string:

123-321-1234            Match phone numbers with 3 digits then 3 digits then 4 digits:
\d{3}.\d{3}\d{4}
\d\d\d.\d\d\d.\d\d\d\d

\d\d\d[-.]\d\d\d        Character sets search for ANY characters within the set.
                        They stop after finding the first character by default.
                        To search for more than a single character within character set, use quantifiers.
                        Here we search for 3 digits then a hyphen or a dot then 3 more digits:

[89]\d\d[-]\d\d\d[-]\d\d\d\d    Search for numbers starting with either 9 or 8:


[a-z]       Dash '-' is also a special character within the character set.
            It specifies range of characters.
            Range of all lowercase letters:
[a-zA-Z]    Range of all lowercase and uppercase letters:
[0-9]       Range of numbers
[^b]at      Search for words 'cat', 'mat', 'pat' but not 'bat'
\d{3,8}     Search for between 3 and 8 digits in a row:

[^a-z]      Another special character within character set is caret '^' put in the beginning.
            It negates the set and matches everything not in the character set.
            Search for everything which is not a lowercase letter:

Mr\.?       Search for 'Mr.' or 'Mr':

Mr\.?\s[A-Z]\w*     \w matches any word character.
                    * is a quantifier meaning zero or more.
                    Search for 'Mr' or 'Mr.' followed by Second name


M(r|s|rs)                   Groups are used to match any character or sequence of characters. Match 'Mr', 'Ms', 'Mrs'.
M(r|s|rs)\.?\s[A-Z]\w*      Match 'Mr', 'Ms', 'Mrs' followed by a space and a second name.

[a-zA-Z]+                   + is a quantifier which specifies 'one or more' characters
                            Search for one or more uppercase or lowercase letters

[a-zA-Z.]+@[a-zA-Z]+\.com   Simple search for emails ending with '.com'.
                            The dot in the first character set because email sometimes conntains dot beween first and second names

[a-zA-Z.-0-9]+@[a-zA-Z-]+\.(com|edu|net)            Search for emails which have dash or number in the first part and a diffenrent domain e.g. com, edu, net

[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+      Will match all emails.



https?://                       To match 'http://' or 'https://':

https?://(www\.)?\w+\.\w+       An entire group of characters can be optional or used with quantifier.
                                Search for 'http://' or 'https://' with an optional 'www.' and a website

https?://(www\.)?(\w+)(\.\w+)   We can put our regular expression in groups which will allow to later return a specific group number:
                                In the 'replace' field of Atom or Pycharm you can write group numbers after the dollar sign '$' to return specific group.
                                $0      Zero group returns entire match
                                $1      Will return 'www.' if it exists
                                $2      Will return website name
                                $3      Will return domain name
                                $2$3    Will return website and domain names
