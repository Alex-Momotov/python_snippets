# Python ecosystem components
# Component                         Managed by          Example
1. Python installation              pyenv               Python 3.7.7, Python 2.7.0
2. Python virtual environments      pipenv              ~/.local/share/virtualenvs/qatests-56IIr-1M
3. Python dependencies              pipenv              requests, pandas, pip, pytest

# What is virtual environment?
Virtual environment     # Isolated runtime environment, that allows installing Python packages without interfering with the
                        # behaviour of other Python applications running on the same system.
Runtime environment     # A set of hardware, OS, and software components (loose term environment) which together support execution of a process/program.
                        # Hardware components:      cpu, RAM, network card, cables ...
                        # Software components:      Python installation, JRE (Java virtual machine), binaries ...
                        # OS components:            Env vars, sockets, files on filesystem, hardware drivers ...

# Cli tools as env packages (pip, pytest)
Some packages installed in virt env are actually cli tools, and can be invoked when the env is activated.
pip and pytest are examples of such tools.

# Pip as OS's package manager
Using pip to install packages from within activated virt env will install them into that virt env.
However, you should do 'pipenv install <pkg>' instead, since pipenv also acts as a package manager.

Using pip to install packages outside a virt env will install them on the OS`s python. This is why you can install
some MacOS programs using 'pip install <program>'. Note, run 'which python', and 'which pip' to ensure youre
installing them onto the right python interpreter. Double check if you have python=python3 and pip=pip3 aliases.

# Pyenv
Pyenv is a tool for managing python installations on Mac and Linux. Avoids you messing up you OS python. Works well together with pipenv.

# Pipenv
Before pipenv there existed separate tools for managing python virt envs, and python packages.
    venv - tools for managing virt envs.
    pip, pip3 - tools for managing dependencies.
Pipenv (as the name suggests) supports management of both virt envs and packages, all in one neat tool.

# Summary of managing Python environment
1. Use python3 installed via brew ('python3' and 'pip3') to install cli commands on your MacOS, and as dependency to other brew tools.
2. Manage Python installations for virt envs with 'pyenv'.
3. Manage Python virt envs and dependencies with 'pipenv'.
4. Specify required python version in Pipfile or with 'pipenv install --python'.
5. If pipenv complains that your system doesnt have required Python version installed, and prompts you to install it, type 'no' and install it using 'pyenv'.
   After installing needed version with 'pyenv', retry creating pipenv virt env, and pipenv will automatically discover the new Python version.
